@model IEnumerable<Tasker.Models.Mission>

@{
    ViewData["Title"] = "Все задачи";
}


<div class="container">
    <div class="task-filter">
        <label for="status-select">Фильтр по статусу:</label>
        <select id="status-select">
            <option value="all">Все</option>
            <option value="to-do">К выполнению</option>
            <option value="in-progress">В процессе</option>
            <option value="done">Выполнено</option>
        </select>
    </div>

    <div class="task-header">
        <h2>Список задач:</h2>
        <span>Всего задач: 10</span>
    </div>

    <div class="card-container">
        @foreach (var item in Model)
        {
            <a asp-action="Details" asp-route-id="@item.MissionId" div class="card">
                <h2><b>@Html.DisplayFor(modelItem => item.MissionName)</b></h2>
                <p>@Html.DisplayFor(modelItem => item.MissionDesc)</p>
                <div class="card-details">

                    @*ответственный*@
                    <div class="card-details-item">
                        <img src="/image/ico/doer.png" class="iconMini" />
                        <span>@Html.DisplayFor(modelItem => item.UserDoer.UserName)</span>
                    </div>

                    @*постановщик задачи*@
                    <div class="card-details-item">
                        <img src="/image/ico/master.png" class="iconMini" />
                        <span>@Html.DisplayFor(modelItem => item.UserMaster.UserName)</span>
                    </div>

                    @*Статус*@
                    <div class="card-details-item">
                        <img src="/image/ico/status.png" class="iconMini" />
                        <span>@Html.DisplayFor(modelItem => item.Status.StatusName)</span>
                    </div>

                    @*Дата создания*@
                    <div class="card-details-item">
                        <img src="/image/ico/dateStart.png" class="iconMini" />
                        <span>@Html.DisplayFor(modelItem => item.DateCreate)</span>
                    </div>

                    @*Дедлайн*@
                    <div class="card-details-item">
                        <img src="/image/ico/dateFinish.png" class="iconMini" />
                        <span>@Html.DisplayFor(modelItem => item.DeadLine)</span>
                    </div>

                    @*Осталось времени*@
                    <div class="card-details-item">
                        <img src="/image/ico/timeLeft.png" class="iconMini" />

                        <span>
                            @{
                                TimeSpan timeLeft = (item.DeadLine - DateTime.Now).Value;
                                string result = string.Format("{0} дней, {1} часов", timeLeft.Days, timeLeft.Hours);
                                @result
                            }
                        </span>

                    </div>

                    @*Стоимость задачи*@
                    <div class="card-details-item">
                        @for (int i = 0; i < item.MissionCost; i++)
                        {
                            <img src="/image/ico/points.png" class="iconMini" />
                        }
                    </div>

                </div>

            </a>
        }
    </div>











    <style>
        span {
            margin-left: 5px;
        }

        .card:hover {
            transition: 0.5s;
            transform: scale(1.08);
            color:black;
        }

        .card-container {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            gap: 20px;
        }

        .card {
            background-color: #fff;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            border-radius: 5px;
            padding: 10px;
            height: 100%;
            transition: 0.5s;
        }

            .card h2 {
                font-size: 1.1rem;
                margin-bottom: 10px;
            }

            .card p {
                font-size: 0.8rem;
                margin-bottom: 20px;
            }

        .card-details {
            display: flex;
            flex-direction: column;
            margin-bottom: 20px;
        }

        .card-details-item {
            display: flex;
            margin: 5px 5px 5px 5px;
            font-size: 0.8rem;
            text-align: left;
            align-items: center;
        }

        .card-actions {
            display: flex;
            justify-content: space-between;
            margin-top: 20px;
        }



        /* Основные стили для карточек */
        .task-card {
            display: flex;
            flex-direction: column;
            background-color: #fff;
            border-radius: 8px;
            box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.1);
            padding: 16px;
            transition: all 0.2s ease-in-out;
            cursor: pointer;
            margin-bottom: 16px;
            width: calc(20% - 16px);
            margin-right: 16px;
        }

            .task-card:hover {
                transform: translateY(-4px);
                box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2);
            }

            .task-card h2 {
                margin-top: 0;
                margin-bottom: 8px;
            }

            .task-card p {
                margin-top: 0;
                margin-bottom: 16px;
            }

        /* Стили для заголовка */
        .task-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 16px;
        }

            .task-header h2 {
                font-size: 24px;
                font-weight: bold;
            }

            .task-header button {
                border: none;
                background-color: #007bff;
                color: #fff;
                border-radius: 8px;
                padding: 8px 16px;
                font-size: 16px;
                cursor: pointer;
            }

        /* Стили для фильтра */
        .task-filter {
            margin-bottom: 32px;
        }

            .task-filter select {
                border: none;
                background-color: #f7f7f7;
                padding: 8px 16px;
                border-radius: 8px;
                font-size: 16px;
            }

            .task-filter label {
                margin-right: 16px;
            }

    </style>


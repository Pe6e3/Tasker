@model IEnumerable<Tasker.Models.Mission>

@{
    ViewData["Title"] = "Все задачи";
}

<div class="container">



    <div class="task-filter">
        <form method="get">
            <label for="status-select">Фильтр по статусу:</label>
            <select id="status-select" name="status">
                <option value="All">Все задачи</option>
                @foreach (Status status in @ViewBag.Statuses)
                {
                    <option value="@status.StatusName">@status.StatusName</option>
                }

            </select>
            <button type="submit">Применить</button>
        </form>
    </div>

    <div class="task-header">
    </div>
    <span>Всего задач: @Model.Count()</span>
    <h2>Все задачи</h2>
    <div class="card-container">
        @foreach (var item in Model)
        {
            <a asp-action="Details" asp-route-id="@item.MissionId" div class="card">
                <div class="task-header">@Html.DisplayFor(modelItem => item.MissionName)</div>
                <p>@Html.DisplayFor(modelItem => item.MissionDesc)</p>
                <div class="card-details">

                    @*ответственный*@
                    <div class="card-details-item">
                        <img src="/image/ico/doer.png" class="iconMini" />
                        <span>@Html.DisplayFor(modelItem => item.UserDoer.UserName)</span>
                    </div>

                    @*постановщик задачи*@
                    <div class="card-details-item">
                        <img src="/image/ico/master.png" class="iconMini" />
                        <span>@Html.DisplayFor(modelItem => item.UserMaster.UserName)</span>
                    </div>

                    @*Статус*@
                    <div class="card-details-item">
                        <img src="/image/ico/status.png" class="iconMini" />
                        <span>@Html.DisplayFor(modelItem => item.Status.StatusName)</span>
                    </div>

                    @*Дата создания*@
                    <div class="card-details-item">
                        <img src="/image/ico/dateStart.png" class="iconMini" />
                        <span>@Html.DisplayFor(modelItem => item.DateCreate)</span>
                    </div>

                    @*Дедлайн*@
                    <div class="card-details-item">
                        <img src="/image/ico/dateFinish.png" class="iconMini" />
                        <span>@Html.DisplayFor(modelItem => item.DeadLine)</span>
                    </div>

                    @*Осталось времени*@
                    <div class="card-details-item">
                        <img src="/image/ico/timeLeft.png" class="iconMini" />

                        <span>
                            @{
                                TimeSpan timeLeft = (item.DeadLine - DateTime.Now).Value;
                                string result = string.Format("{0} дней, {1} часов", timeLeft.Days, timeLeft.Hours);
                                @result
                            }
                        </span>

                    </div>

                    @*Стоимость задачи*@
                    <div class="card-details-item">
                        @for (int i = 0; i < item.MissionCost; i++)
                        {
                            <img src="/image/ico/points.png" class="iconMini" />
                        }
                    </div>

                </div>

            </a>
        }
    </div>



